$date
	Mon Dec  6 04:51:56 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module regfile_contr_tb $end
$var wire 32 ! reg_t [31:0] $end
$var wire 32 " op2 [31:0] $end
$var wire 32 # op1 [31:0] $end
$var reg 32 $ ALUout [31:0] $end
$var reg 1 % EXEC3 $end
$var reg 32 & PC [31:0] $end
$var reg 32 ' RAMDout [31:0] $end
$var reg 1 ( clk $end
$var reg 6 ) func [5:0] $end
$var reg 32 * immed [31:0] $end
$var reg 6 + opcode [5:0] $end
$var reg 5 , rd [4:0] $end
$var reg 1 - reset $end
$var reg 5 . rs [4:0] $end
$var reg 5 / rt [4:0] $end
$scope module m $end
$var wire 32 0 ALUout [31:0] $end
$var wire 1 % EXEC3 $end
$var wire 32 1 PC [31:0] $end
$var wire 32 2 RAMDout [31:0] $end
$var wire 1 3 RegWriteEN $end
$var wire 1 ( clk $end
$var wire 6 4 func [5:0] $end
$var wire 32 5 immed [31:0] $end
$var wire 6 6 opcode [5:0] $end
$var wire 5 7 rd [4:0] $end
$var wire 32 8 reg_tout [31:0] $end
$var wire 1 - reset $end
$var wire 5 9 rs [4:0] $end
$var wire 5 : rt [4:0] $end
$var wire 32 ; reg_t [31:0] $end
$var wire 32 < op2 [31:0] $end
$var wire 32 = op1 [31:0] $end
$var wire 5 > Write_register [4:0] $end
$var wire 32 ? Write_data [31:0] $end
$var wire 1 @ RegWrite $end
$scope module m $end
$var wire 32 A Read_data_1 [31:0] $end
$var wire 32 B Read_data_2 [31:0] $end
$var wire 5 C Read_register_1 [4:0] $end
$var wire 5 D Read_register_2 [4:0] $end
$var wire 1 3 RegWrite $end
$var wire 32 E Write_data [31:0] $end
$var wire 5 F Write_register [4:0] $end
$var wire 1 ( clk $end
$var wire 1 - reset $end
$var integer 32 G i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 G
b1010 F
b1000101 E
b1010 D
b101 C
b1100100 B
b110010 A
0@
b1000101 ?
b1010 >
b110010 =
b1100100 <
b1100100 ;
b1010 :
b101 9
b1100100 8
b1111 7
b100 6
b100100 5
b0 4
03
b110100100 2
b1100 1
b1000101 0
b1010 /
b101 .
0-
b1111 ,
b100 +
b100100 *
b0 )
0(
b110100100 '
b1100 &
0%
b1000101 $
b110010 #
b1100100 "
b1100100 !
$end
#15
1(
#25
0(
#27
1@
b1111 >
b1111 F
b100010 )
b100010 4
b0 +
b0 6
#35
1(
#45
0(
#47
b100100 "
b100100 <
b1010 >
b1010 F
b10000 )
b10000 4
b1001 +
b1001 6
#55
1(
#65
0(
#67
b110100100 ?
b110100100 E
13
1%
b101011 )
b101011 4
b100000 +
b100000 6
#75
b110100100 !
b110100100 8
b110100100 ;
b110100100 B
1(
#85
0(
#87
